using ProductShop.Data;
using System.IO;
using System.Xml.Linq;
using System;
using ProductShop.Models;
using System.Collections.Generic;
using System.Linq;
using AutoMapper;
using ProductShop.Dtos.Export;
using AutoMapper.QueryableExtensions;
using System.Xml.Serialization;
using Newtonsoft.Json;
using Microsoft.EntityFrameworkCore;

namespace ProductShop
{
    public class StartUp
    {
        public static IMapper mapper;

        public static void Main(string[] args)
        {
            ProductShopContext context = new ProductShopContext();

            Console.WriteLine(GetSoldProducts(context));
        }
        

        public static string GetSoldProducts(ProductShopContext context)
        {
            Initialize();

            List<UserOutputDTO> users = context
                 .Users
                 .Include(u => u.ProductsSold)
                 .Where(u => u.ProductsSold.Count() > 0)
                 .OrderBy(u => u.LastName)
                 .ThenBy(u => u.FirstName)
                 .ProjectTo<UserOutputDTO>(mapper.ConfigurationProvider)
                 .Take(5)
                 .ToList();

            XmlSerializerNamespaces ns = new XmlSerializerNamespaces();
            ns.Add("", "");

            StringWriter writer = new StringWriter();

            XmlSerializer serializer = new XmlSerializer(typeof(List<UserOutputDTO>), new XmlRootAttribute("Users"));

            serializer.Serialize(writer, users, ns);

            return writer.ToString();
        }
        public static void Initialize()
        {
            MapperConfiguration configuration = new MapperConfiguration(cnfg =>
            {
                cnfg.AddProfile<ProductShopProfile>();
            });
            mapper = new Mapper(configuration);
        }
    }
}
